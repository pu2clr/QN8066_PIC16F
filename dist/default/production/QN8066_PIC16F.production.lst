

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Aug 21 11:47:42 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	16F876A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Generated 12/10/2023 GMT
    24                           ; 
    25                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution. Publication is not required when
    39                           ;        this file is used in an embedded application.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F876A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57     0000                     	;# 
    58     0001                     	;# 
    59     0002                     	;# 
    60     0003                     	;# 
    61     0004                     	;# 
    62     0005                     	;# 
    63     0006                     	;# 
    64     0007                     	;# 
    65     000A                     	;# 
    66     000B                     	;# 
    67     000C                     	;# 
    68     000D                     	;# 
    69     000E                     	;# 
    70     000E                     	;# 
    71     000F                     	;# 
    72     0010                     	;# 
    73     0011                     	;# 
    74     0012                     	;# 
    75     0013                     	;# 
    76     0014                     	;# 
    77     0015                     	;# 
    78     0015                     	;# 
    79     0016                     	;# 
    80     0017                     	;# 
    81     0018                     	;# 
    82     0019                     	;# 
    83     001A                     	;# 
    84     001B                     	;# 
    85     001B                     	;# 
    86     001C                     	;# 
    87     001D                     	;# 
    88     001E                     	;# 
    89     001F                     	;# 
    90     0081                     	;# 
    91     0085                     	;# 
    92     0086                     	;# 
    93     0087                     	;# 
    94     008C                     	;# 
    95     008D                     	;# 
    96     008E                     	;# 
    97     0091                     	;# 
    98     0092                     	;# 
    99     0093                     	;# 
   100     0094                     	;# 
   101     0098                     	;# 
   102     0099                     	;# 
   103     009C                     	;# 
   104     009D                     	;# 
   105     009E                     	;# 
   106     009F                     	;# 
   107     010C                     	;# 
   108     010D                     	;# 
   109     010E                     	;# 
   110     010F                     	;# 
   111     018C                     	;# 
   112     018D                     	;# 
   113     0000                     	;# 
   114     0001                     	;# 
   115     0002                     	;# 
   116     0003                     	;# 
   117     0004                     	;# 
   118     0005                     	;# 
   119     0006                     	;# 
   120     0007                     	;# 
   121     000A                     	;# 
   122     000B                     	;# 
   123     000C                     	;# 
   124     000D                     	;# 
   125     000E                     	;# 
   126     000E                     	;# 
   127     000F                     	;# 
   128     0010                     	;# 
   129     0011                     	;# 
   130     0012                     	;# 
   131     0013                     	;# 
   132     0014                     	;# 
   133     0015                     	;# 
   134     0015                     	;# 
   135     0016                     	;# 
   136     0017                     	;# 
   137     0018                     	;# 
   138     0019                     	;# 
   139     001A                     	;# 
   140     001B                     	;# 
   141     001B                     	;# 
   142     001C                     	;# 
   143     001D                     	;# 
   144     001E                     	;# 
   145     001F                     	;# 
   146     0081                     	;# 
   147     0085                     	;# 
   148     0086                     	;# 
   149     0087                     	;# 
   150     008C                     	;# 
   151     008D                     	;# 
   152     008E                     	;# 
   153     0091                     	;# 
   154     0092                     	;# 
   155     0093                     	;# 
   156     0094                     	;# 
   157     0098                     	;# 
   158     0099                     	;# 
   159     009C                     	;# 
   160     009D                     	;# 
   161     009E                     	;# 
   162     009F                     	;# 
   163     010C                     	;# 
   164     010D                     	;# 
   165     010E                     	;# 
   166     010F                     	;# 
   167     018C                     	;# 
   168     018D                     	;# 
   169     0000                     	;# 
   170     0001                     	;# 
   171     0002                     	;# 
   172     0003                     	;# 
   173     0004                     	;# 
   174     0005                     	;# 
   175     0006                     	;# 
   176     0007                     	;# 
   177     000A                     	;# 
   178     000B                     	;# 
   179     000C                     	;# 
   180     000D                     	;# 
   181     000E                     	;# 
   182     000E                     	;# 
   183     000F                     	;# 
   184     0010                     	;# 
   185     0011                     	;# 
   186     0012                     	;# 
   187     0013                     	;# 
   188     0014                     	;# 
   189     0015                     	;# 
   190     0015                     	;# 
   191     0016                     	;# 
   192     0017                     	;# 
   193     0018                     	;# 
   194     0019                     	;# 
   195     001A                     	;# 
   196     001B                     	;# 
   197     001B                     	;# 
   198     001C                     	;# 
   199     001D                     	;# 
   200     001E                     	;# 
   201     001F                     	;# 
   202     0081                     	;# 
   203     0085                     	;# 
   204     0086                     	;# 
   205     0087                     	;# 
   206     008C                     	;# 
   207     008D                     	;# 
   208     008E                     	;# 
   209     0091                     	;# 
   210     0092                     	;# 
   211     0093                     	;# 
   212     0094                     	;# 
   213     0098                     	;# 
   214     0099                     	;# 
   215     009C                     	;# 
   216     009D                     	;# 
   217     009E                     	;# 
   218     009F                     	;# 
   219     010C                     	;# 
   220     010D                     	;# 
   221     010E                     	;# 
   222     010F                     	;# 
   223     018C                     	;# 
   224     018D                     	;# 
   225                           
   226                           	psect	idataBANK0
   227     0642                     __pidataBANK0:
   228                           
   229                           ;initializer for _rdsStationName
   230     0642  3420               	retlw	32
   231     0643  3451               	retlw	81
   232     0644  344E               	retlw	78
   233     0645  3438               	retlw	56
   234     0646  3430               	retlw	48
   235     0647  3436               	retlw	54
   236     0648  3436               	retlw	54
   237     0649  340D               	retlw	13
   238     064A  3400               	retlw	0
   239                           
   240                           ;initializer for _rdsPI
   241     064B  349B               	retlw	155
   242     064C  3481               	retlw	129
   243                           
   244                           ;initializer for _xtal_div
   245     064D  34E8               	retlw	232
   246     064E  3403               	retlw	3
   247                           
   248                           ;initializer for _resetDelay
   249     064F  34E8               	retlw	232
   250     0650  3403               	retlw	3
   251                           
   252                           ;initializer for _rdsPTY
   253     0651  3405               	retlw	5
   254                           
   255                           ;initializer for _rdsRepeatGroup
   256     0652  3405               	retlw	5
   257                           
   258                           ;initializer for _rdsSyncTime
   259     0653  343C               	retlw	60
   260     0013                     _SSPBUF	set	19
   261     0014                     _SSPCON	set	20
   262     0094                     _SSPSTATbits	set	148
   263     0091                     _SSPCON2bits	set	145
   264     0094                     _SSPSTAT	set	148
   265     0091                     _SSPCON2	set	145
   266     043C                     _TRISC4	set	1084
   267     043B                     _TRISC3	set	1083
   268                           
   269                           	psect	cinit
   270     07DE                     start_initialization:	
   271                           ; #config settings
   272                           
   273     07DE                     __initialization:
   274                           
   275                           ; Initialize objects allocated to BANK0
   276     07DE  1383               	bcf	3,7	;select IRP bank0
   277     07DF  3032               	movlw	low (__pdataBANK0+18)
   278     07E0  00FD               	movwf	btemp+-1
   279     07E1  3006               	movlw	high __pidataBANK0
   280     07E2  00FE               	movwf	btemp
   281     07E3  3042               	movlw	low __pidataBANK0
   282     07E4  00FF               	movwf	btemp+1
   283     07E5  3020               	movlw	low __pdataBANK0
   284     07E6  0084               	movwf	4
   285     07E7  120A  118A  2658  120A  118A  	fcall	init_ram0
   286                           
   287                           ; Clear objects allocated to BANK0
   288     07EC  01B2               	clrf	__pbssBANK0& (0+127)
   289     07ED  01B3               	clrf	(__pbssBANK0+1)& (0+127)
   290     07EE  01B4               	clrf	(__pbssBANK0+2)& (0+127)
   291     07EF  01B5               	clrf	(__pbssBANK0+3)& (0+127)
   292     07F0  01B6               	clrf	(__pbssBANK0+4)& (0+127)
   293     07F1  01B7               	clrf	(__pbssBANK0+5)& (0+127)
   294     07F2  01B8               	clrf	(__pbssBANK0+6)& (0+127)
   295     07F3  01B9               	clrf	(__pbssBANK0+7)& (0+127)
   296     07F4  01BA               	clrf	(__pbssBANK0+8)& (0+127)
   297     07F5  01BB               	clrf	(__pbssBANK0+9)& (0+127)
   298     07F6  01BC               	clrf	(__pbssBANK0+10)& (0+127)
   299     07F7  01BD               	clrf	(__pbssBANK0+11)& (0+127)
   300     07F8  01BE               	clrf	(__pbssBANK0+12)& (0+127)
   301                           
   302                           ; Clear objects allocated to COMMON
   303     07F9  01FB               	clrf	__pbssCOMMON& (0+127)
   304     07FA  01FC               	clrf	(__pbssCOMMON+1)& (0+127)
   305     07FB  01FD               	clrf	(__pbssCOMMON+2)& (0+127)
   306     07FC                     end_of_initialization:	
   307                           ;End of C runtime variable initialization code
   308                           
   309     07FC                     __end_of__initialization:
   310     07FC  0183               	clrf	3
   311     07FD  120A  118A  2E30   	ljmp	_main	;jump to C main() function
   312                           
   313                           	psect	bssCOMMON
   314     007B                     __pbssCOMMON:
   315     007B                     _reg_gplt:
   316     007B                     	ds	1
   317     007C                     _reg_system2:
   318     007C                     	ds	1
   319     007D                     _reg_system1:
   320     007D                     	ds	1
   321                           
   322                           	psect	bssBANK0
   323     0032                     __pbssBANK0:
   324     0032                     _rdsSendError:
   325     0032                     	ds	1
   326     0033                     _rdsTP:
   327     0033                     	ds	1
   328     0034                     _reg_vol_ctl:
   329     0034                     	ds	1
   330     0035                     _reg_pac:
   331     0035                     	ds	1
   332     0036                     _reg_rds:
   333     0036                     	ds	1
   334     0037                     _reg_reg_vga:
   335     0037                     	ds	1
   336     0038                     _reg_xtal_div2:
   337     0038                     	ds	1
   338     0039                     _reg_xtal_div1:
   339     0039                     	ds	1
   340     003A                     _reg_xtal_div0:
   341     003A                     	ds	1
   342     003B                     _txch:
   343     003B                     	ds	1
   344     003C                     _reg_int_ctrl:
   345     003C                     	ds	1
   346     003D                     _reg_fdev:
   347     003D                     	ds	1
   348     003E                     _reg_cca:
   349     003E                     	ds	1
   350                           
   351                           	psect	dataBANK0
   352     0020                     __pdataBANK0:
   353     0020                     _rdsStationName:
   354     0020                     	ds	9
   355     0029                     _rdsPI:
   356     0029                     	ds	2
   357     002B                     _xtal_div:
   358     002B                     	ds	2
   359     002D                     _resetDelay:
   360     002D                     	ds	2
   361     002F                     _rdsPTY:
   362     002F                     	ds	1
   363     0030                     _rdsRepeatGroup:
   364     0030                     	ds	1
   365     0031                     _rdsSyncTime:
   366     0031                     	ds	1
   367                           
   368                           	psect	inittext
   369     0654                     init_fetch0:	
   370                           ;	Called with low address in FSR and high address in W
   371                           
   372     0654  087E               	movf	btemp,w
   373     0655  008A               	movwf	10
   374     0656  087F               	movf	btemp+1,w
   375     0657  0082               	movwf	2
   376     0658                     init_ram0:	
   377                           ;Called with:
   378                           ;	high address of idata address in btemp 
   379                           ;	low address of idata address in btemp+1 
   380                           ;	low address of data in FSR
   381                           ;	high address + 1 of data in btemp-1
   382                           
   383     0658  120A  118A  2654  120A  118A  	fcall	init_fetch0
   384     065D  0080               	movwf	0
   385     065E  0A84               	incf	4,f
   386     065F  0804               	movf	4,w
   387     0660  067D               	xorwf	btemp+-1,w
   388     0661  1903               	btfsc	3,2
   389     0662  3400               	retlw	0
   390     0663  0AFF               	incf	btemp+1,f
   391     0664  1903               	btfsc	3,2
   392     0665  0AFE               	incf	btemp,f
   393     0666  2E58               	goto	init_ram0
   394                           
   395                           	psect	cstackCOMMON
   396     0070                     __pcstackCOMMON:
   397     0070                     ?_i2c_start:
   398     0070                     ??_i2c_start:	
   399                           ; 1 bytes @ 0x0
   400                           
   401     0070                     ?_i2c_stop:	
   402                           ; 1 bytes @ 0x0
   403                           
   404     0070                     ??_i2c_stop:	
   405                           ; 1 bytes @ 0x0
   406                           
   407     0070                     ?_i2c_write:	
   408                           ; 1 bytes @ 0x0
   409                           
   410     0070                     ??_i2c_write:	
   411                           ; 1 bytes @ 0x0
   412                           
   413     0070                     ?_i2c_read:	
   414                           ; 1 bytes @ 0x0
   415                           
   416     0070                     ??_i2c_read:	
   417                           ; 1 bytes @ 0x0
   418                           
   419     0070                     ?_get_register:	
   420                           ; 1 bytes @ 0x0
   421                           
   422     0070                     ?_qn8066_begin:	
   423                           ; 1 bytes @ 0x0
   424                           
   425     0070                     ?_main:	
   426                           ; 1 bytes @ 0x0
   427                           
   428     0070                     i2c_write@data:	
   429                           ; 1 bytes @ 0x0
   430                           
   431     0070                     i2c_read@ack:	
   432                           ; 1 bytes @ 0x0
   433                           
   434                           
   435                           ; 1 bytes @ 0x0
   436     0070                     	ds	1
   437     0071                     ?_set_register:
   438     0071                     i2c_read@aux:	
   439                           ; 1 bytes @ 0x1
   440                           
   441     0071                     set_register@value:	
   442                           ; 1 bytes @ 0x1
   443                           
   444                           
   445                           ; 1 bytes @ 0x1
   446     0071                     	ds	1
   447     0072                     ??_set_register:
   448     0072                     ??_get_register:	
   449                           ; 1 bytes @ 0x2
   450                           
   451                           
   452                           ; 1 bytes @ 0x2
   453     0072                     	ds	2
   454     0074                     set_register@registerNumber:
   455     0074                     get_register@registerNumber:	
   456                           ; 1 bytes @ 0x4
   457                           
   458                           
   459                           ; 1 bytes @ 0x4
   460     0074                     	ds	1
   461     0075                     ?_qn8066_set_tx:
   462     0075                     get_register@value:	
   463                           ; 1 bytes @ 0x5
   464                           
   465     0075                     qn8066_set_tx@frequency:	
   466                           ; 1 bytes @ 0x5
   467                           
   468                           
   469                           ; 2 bytes @ 0x5
   470     0075                     	ds	1
   471     0076                     ??_qn8066_begin:
   472                           
   473                           ; 1 bytes @ 0x6
   474     0076                     	ds	1
   475     0077                     ??_qn8066_set_tx:
   476                           
   477                           ; 1 bytes @ 0x7
   478     0077                     	ds	2
   479     0079                     qn8066_set_tx@auxFreq:
   480                           
   481                           ; 2 bytes @ 0x9
   482     0079                     	ds	2
   483     007B                     ??_main:
   484                           
   485                           	psect	maintext
   486     0630                     __pmaintext:	
   487                           ; 1 bytes @ 0xB
   488 ;;
   489 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   490 ;;
   491 ;; *************** function _main *****************
   492 ;; Defined at:
   493 ;;		line 31 in file "main.c"
   494 ;; Parameters:    Size  Location     Type
   495 ;;		None
   496 ;; Auto vars:     Size  Location     Type
   497 ;;		None
   498 ;; Return value:  Size  Location     Type
   499 ;;                  1    wreg      void 
   500 ;; Registers used:
   501 ;;		wreg, status,2, status,0, pclath, cstack
   502 ;; Tracked objects:
   503 ;;		On entry : B00/0
   504 ;;		On exit  : 0/0
   505 ;;		Unchanged: 0/0
   506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   507 ;;      Params:         0       0       0       0       0
   508 ;;      Locals:         0       0       0       0       0
   509 ;;      Temps:          0       0       0       0       0
   510 ;;      Totals:         0       0       0       0       0
   511 ;;Total ram usage:        0 bytes
   512 ;; Hardware stack levels required when called: 3
   513 ;; This function calls:
   514 ;;		_qn8066_begin
   515 ;;		_qn8066_set_tx
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521     0630                     _main:	
   522                           ;psect for function _main
   523                           
   524     0630                     l939:	
   525                           ;incstack = 0
   526                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   527                           
   528     0630  120A  118A  26E0  120A  118A  	fcall	_qn8066_begin
   529     0635  302D               	movlw	45
   530     0636  00F5               	movwf	qn8066_set_tx@frequency
   531     0637  3004               	movlw	4
   532     0638  00F6               	movwf	qn8066_set_tx@frequency+1
   533     0639  120A  118A  272B  120A  118A  	fcall	_qn8066_set_tx
   534     063E                     l164:
   535     063E                     l165:
   536     063E  2E3E               	goto	l164
   537     063F  120A  118A  2800   	ljmp	start
   538     0642                     __end_of_main:
   539                           
   540                           	psect	text1
   541     072B                     __ptext1:	
   542 ;; *************** function _qn8066_set_tx *****************
   543 ;; Defined at:
   544 ;;		line 123 in file "qn8066.c"
   545 ;; Parameters:    Size  Location     Type
   546 ;;  frequency       2    5[COMMON] unsigned int 
   547 ;; Auto vars:     Size  Location     Type
   548 ;;  auxFreq         2    9[COMMON] unsigned int 
   549 ;; Return value:  Size  Location     Type
   550 ;;                  1    wreg      void 
   551 ;; Registers used:
   552 ;;		wreg, status,2, status,0, pclath, cstack
   553 ;; Tracked objects:
   554 ;;		On entry : 0/0
   555 ;;		On exit  : 0/0
   556 ;;		Unchanged: 0/0
   557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   558 ;;      Params:         2       0       0       0       0
   559 ;;      Locals:         2       0       0       0       0
   560 ;;      Temps:          2       0       0       0       0
   561 ;;      Totals:         6       0       0       0       0
   562 ;;Total ram usage:        6 bytes
   563 ;; Hardware stack levels used: 1
   564 ;; Hardware stack levels required when called: 2
   565 ;; This function calls:
   566 ;;		_set_register
   567 ;; This function is called by:
   568 ;;		_main
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572     072B                     _qn8066_set_tx:	
   573                           ;psect for function _qn8066_set_tx
   574                           
   575     072B                     l899:	
   576                           ;incstack = 0
   577                           ; Regs used in _qn8066_set_tx: [wreg+status,2+status,0+pclath+cstack]
   578                           
   579                           
   580                           ;qn8066.c: 125:   reg_system1.raw = 0B11100011;
   581     072B  30E3               	movlw	227
   582     072C  00FD               	movwf	_reg_system1
   583     072D                     l901:
   584                           
   585                           ;qn8066.c: 126:   set_register(0x00, reg_system1.raw);
   586     072D  087D               	movf	_reg_system1,w
   587     072E  00F1               	movwf	set_register@value
   588     072F  3000               	movlw	0
   589     0730  120A  118A  2685  120A  118A  	fcall	_set_register
   590     0735                     l903:
   591                           
   592                           ;qn8066.c: 127:   set_register(0x01, reg_system2.raw);
   593     0735  087C               	movf	_reg_system2,w
   594     0736  00F1               	movwf	set_register@value
   595     0737  3001               	movlw	1
   596     0738  120A  118A  2685  120A  118A  	fcall	_set_register
   597     073D                     l905:
   598                           
   599                           ;qn8066.c: 128:   reg_system2.arg.rdsrdy = !(reg_system2.arg.rdsrdy);
   600     073D  1003               	clrc
   601     073E  1CFC               	btfss	_reg_system2,1
   602     073F  1403               	setc
   603     0740  1803               	btfsc	3,0
   604     0741  2F43               	goto	u191
   605     0742  2F45               	goto	u190
   606     0743                     u191:
   607     0743  14FC               	bsf	_reg_system2,1
   608     0744  2F46               	goto	u204
   609     0745                     u190:
   610     0745  10FC               	bcf	_reg_system2,1
   611     0746                     u204:
   612     0746                     l907:
   613                           
   614                           ;qn8066.c: 129:   set_register(0x01, reg_system2.raw);
   615     0746  087C               	movf	_reg_system2,w
   616     0747  00F1               	movwf	set_register@value
   617     0748  3001               	movlw	1
   618     0749  120A  118A  2685  120A  118A  	fcall	_set_register
   619     074E                     l909:
   620                           
   621                           ;qn8066.c: 130:   set_register(0x02, reg_cca.raw);
   622     074E  1283               	bcf	3,5	;RP0=0, select bank0
   623     074F  1303               	bcf	3,6	;RP1=0, select bank0
   624     0750  083E               	movf	_reg_cca,w
   625     0751  00F1               	movwf	set_register@value
   626     0752  3002               	movlw	2
   627     0753  120A  118A  2685  120A  118A  	fcall	_set_register
   628     0758                     l911:
   629     0758  30E8               	movlw	232
   630     0759  00F1               	movwf	set_register@value
   631     075A  3007               	movlw	7
   632     075B  120A  118A  2685  120A  118A  	fcall	_set_register
   633     0760                     l913:
   634     0760  300B               	movlw	11
   635     0761  00F1               	movwf	set_register@value
   636     0762  3008               	movlw	8
   637     0763  120A  118A  2685  120A  118A  	fcall	_set_register
   638     0768                     l915:
   639                           
   640                           ;qn8066.c: 134:   set_register(0x09, 0B01011100);
   641     0768  305C               	movlw	92
   642     0769  00F1               	movwf	set_register@value
   643     076A  3009               	movlw	9
   644     076B  120A  118A  2685  120A  118A  	fcall	_set_register
   645     0770                     l917:
   646                           
   647                           ;qn8066.c: 137:   set_register(0x25, reg_fdev.raw);
   648     0770  1283               	bcf	3,5	;RP0=0, select bank0
   649     0771  1303               	bcf	3,6	;RP1=0, select bank0
   650     0772  083D               	movf	_reg_fdev,w
   651     0773  00F1               	movwf	set_register@value
   652     0774  3025               	movlw	37
   653     0775  120A  118A  2685  120A  118A  	fcall	_set_register
   654     077A                     l919:
   655                           
   656                           ;qn8066.c: 138:   set_register(0x26, reg_rds.raw);
   657     077A  1283               	bcf	3,5	;RP0=0, select bank0
   658     077B  1303               	bcf	3,6	;RP1=0, select bank0
   659     077C  0836               	movf	_reg_rds,w
   660     077D  00F1               	movwf	set_register@value
   661     077E  3026               	movlw	38
   662     077F  120A  118A  2685  120A  118A  	fcall	_set_register
   663     0784                     l921:
   664                           
   665                           ;qn8066.c: 139:   set_register(0x27, reg_gplt.raw);
   666     0784  087B               	movf	_reg_gplt,w
   667     0785  00F1               	movwf	set_register@value
   668     0786  3027               	movlw	39
   669     0787  120A  118A  2685  120A  118A  	fcall	_set_register
   670     078C                     l923:
   671                           
   672                           ;qn8066.c: 141:   unsigned int auxFreq = (frequency - 600) * 2;
   673     078C  0876               	movf	qn8066_set_tx@frequency+1,w
   674     078D  00F8               	movwf	??_qn8066_set_tx+1
   675     078E  0875               	movf	qn8066_set_tx@frequency,w
   676     078F  00F7               	movwf	??_qn8066_set_tx
   677     0790  1003               	clrc
   678     0791  0DF7               	rlf	??_qn8066_set_tx,f
   679     0792  0DF8               	rlf	??_qn8066_set_tx+1,f
   680     0793  0877               	movf	??_qn8066_set_tx,w
   681     0794  3E50               	addlw	80
   682     0795  00F9               	movwf	qn8066_set_tx@auxFreq
   683     0796  0878               	movf	??_qn8066_set_tx+1,w
   684     0797  1803               	skipnc
   685     0798  3E01               	addlw	1
   686     0799  3EFB               	addlw	251
   687     079A  00FA               	movwf	qn8066_set_tx@auxFreq+1
   688     079B                     l925:
   689                           
   690                           ;qn8066.c: 142:   reg_int_ctrl.raw = 0B00100000 | auxFreq >> 8;
   691     079B  087A               	movf	qn8066_set_tx@auxFreq+1,w
   692     079C  3820               	iorlw	32
   693     079D  1283               	bcf	3,5	;RP0=0, select bank0
   694     079E  1303               	bcf	3,6	;RP1=0, select bank0
   695     079F  00BC               	movwf	_reg_int_ctrl
   696     07A0                     l927:
   697                           
   698                           ;qn8066.c: 143:   set_register(0x19,reg_int_ctrl.raw );
   699     07A0  083C               	movf	_reg_int_ctrl,w
   700     07A1  00F1               	movwf	set_register@value
   701     07A2  3019               	movlw	25
   702     07A3  120A  118A  2685  120A  118A  	fcall	_set_register
   703     07A8                     l929:
   704                           
   705                           ;qn8066.c: 144:   set_register(0x1B, 0B11111111 & auxFreq);
   706     07A8  0879               	movf	qn8066_set_tx@auxFreq,w
   707     07A9  00F1               	movwf	set_register@value
   708     07AA  301B               	movlw	27
   709     07AB  120A  118A  2685  120A  118A  	fcall	_set_register
   710     07B0                     l931:
   711                           
   712                           ;qn8066.c: 148:   set_register(0x49, 0B11011111);
   713     07B0  30DF               	movlw	223
   714     07B1  00F1               	movwf	set_register@value
   715     07B2  3049               	movlw	73
   716     07B3  120A  118A  2685  120A  118A  	fcall	_set_register
   717     07B8                     l933:
   718                           
   719                           ;qn8066.c: 149:   set_register(0x6E, 0B11111111);
   720     07B8  30FF               	movlw	255
   721     07B9  00F1               	movwf	set_register@value
   722     07BA  306E               	movlw	110
   723     07BB  120A  118A  2685  120A  118A  	fcall	_set_register
   724                           
   725                           ;qn8066.c: 151:   reg_system1.raw = 0B00001011;
   726     07C0  300B               	movlw	11
   727     07C1  00FD               	movwf	_reg_system1
   728     07C2                     l935:
   729                           
   730                           ;qn8066.c: 152:   set_register(0x00, reg_system1.raw);
   731     07C2  087D               	movf	_reg_system1,w
   732     07C3  00F1               	movwf	set_register@value
   733     07C4  3000               	movlw	0
   734     07C5  120A  118A  2685  120A  118A  	fcall	_set_register
   735     07CA                     l937:
   736                           
   737                           ;qn8066.c: 154:   set_register(0x28, reg_reg_vga.raw);
   738     07CA  1283               	bcf	3,5	;RP0=0, select bank0
   739     07CB  1303               	bcf	3,6	;RP1=0, select bank0
   740     07CC  0837               	movf	_reg_reg_vga,w
   741     07CD  00F1               	movwf	set_register@value
   742     07CE  3028               	movlw	40
   743     07CF  120A  118A  2685  120A  118A  	fcall	_set_register
   744                           
   745                           ;qn8066.c: 155:   _delay((unsigned long)((100)*(4000000/4000.0)));
   746     07D4  3082               	movlw	130
   747     07D5  00F8               	movwf	??_qn8066_set_tx+1
   748     07D6  30DD               	movlw	221
   749     07D7  00F7               	movwf	??_qn8066_set_tx
   750     07D8                     u217:
   751     07D8  0BF7               	decfsz	??_qn8066_set_tx,f
   752     07D9  2FD8               	goto	u217
   753     07DA  0BF8               	decfsz	??_qn8066_set_tx+1,f
   754     07DB  2FD8               	goto	u217
   755     07DC  2FDD               	nop2
   756     07DD                     l109:
   757     07DD  0008               	return
   758     07DE                     __end_of_qn8066_set_tx:
   759                           
   760                           	psect	text2
   761     0685                     __ptext2:	
   762 ;; *************** function _set_register *****************
   763 ;; Defined at:
   764 ;;		line 80 in file "qn8066.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  registerNumb    1    wreg     unsigned char 
   767 ;;  value           1    1[COMMON] unsigned char 
   768 ;; Auto vars:     Size  Location     Type
   769 ;;  registerNumb    1    4[COMMON] unsigned char 
   770 ;; Return value:  Size  Location     Type
   771 ;;                  1    wreg      void 
   772 ;; Registers used:
   773 ;;		wreg, status,2, status,0, pclath, cstack
   774 ;; Tracked objects:
   775 ;;		On entry : 0/0
   776 ;;		On exit  : 0/0
   777 ;;		Unchanged: 0/0
   778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   779 ;;      Params:         1       0       0       0       0
   780 ;;      Locals:         1       0       0       0       0
   781 ;;      Temps:          2       0       0       0       0
   782 ;;      Totals:         4       0       0       0       0
   783 ;;Total ram usage:        4 bytes
   784 ;; Hardware stack levels used: 1
   785 ;; Hardware stack levels required when called: 1
   786 ;; This function calls:
   787 ;;		_i2c_start
   788 ;;		_i2c_stop
   789 ;;		_i2c_write
   790 ;; This function is called by:
   791 ;;		_qn8066_set_tx
   792 ;; This function uses a non-reentrant model
   793 ;;
   794                           
   795     0685                     _set_register:	
   796                           ;psect for function _set_register
   797                           
   798                           
   799                           ;incstack = 0
   800                           ; Regs used in _set_register: [wreg+status,2+status,0+pclath+cstack]
   801                           ;set_register@registerNumber stored from wreg
   802     0685  00F4               	movwf	set_register@registerNumber
   803     0686                     l849:
   804                           
   805                           ;qn8066.c: 81:     i2c_start();
   806     0686  120A  118A  2610  120A  118A  	fcall	_i2c_start
   807     068B                     l851:
   808                           
   809                           ;qn8066.c: 82:     i2c_write(0x21);
   810     068B  3021               	movlw	33
   811     068C  120A  118A  2620  120A  118A  	fcall	_i2c_write
   812     0691                     l853:
   813                           
   814                           ;qn8066.c: 83:     i2c_write(registerNumber);
   815     0691  0874               	movf	set_register@registerNumber,w
   816     0692  120A  118A  2620  120A  118A  	fcall	_i2c_write
   817     0697                     l855:
   818                           
   819                           ;qn8066.c: 84:     i2c_write(value);
   820     0697  0871               	movf	set_register@value,w
   821     0698  120A  118A  2620  120A  118A  	fcall	_i2c_write
   822     069D                     l857:
   823                           
   824                           ;qn8066.c: 85:     i2c_stop();
   825     069D  120A  118A  2618  120A  118A  	fcall	_i2c_stop
   826     06A2                     l859:
   827                           
   828                           ;qn8066.c: 86:     _delay((unsigned long)((2)*(4000000/4000.0)));
   829     06A2  3003               	movlw	3
   830     06A3  00F3               	movwf	??_set_register+1
   831     06A4  3097               	movlw	151
   832     06A5  00F2               	movwf	??_set_register
   833     06A6                     u227:
   834     06A6  0BF2               	decfsz	??_set_register,f
   835     06A7  2EA6               	goto	u227
   836     06A8  0BF3               	decfsz	??_set_register+1,f
   837     06A9  2EA6               	goto	u227
   838     06AA  2EAB               	nop2
   839     06AB                     l100:
   840     06AB  0008               	return
   841     06AC                     __end_of_set_register:
   842                           
   843                           	psect	text3
   844     06E0                     __ptext3:	
   845 ;; *************** function _qn8066_begin *****************
   846 ;; Defined at:
   847 ;;		line 108 in file "qn8066.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : 0/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels used: 1
   867 ;; Hardware stack levels required when called: 2
   868 ;; This function calls:
   869 ;;		_get_register
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875     06E0                     _qn8066_begin:	
   876                           ;psect for function _qn8066_begin
   877                           
   878     06E0                     l877:	
   879                           ;incstack = 0
   880                           ; Regs used in _qn8066_begin: [wreg+status,2+status,0+pclath+cstack]
   881                           
   882                           
   883                           ;qn8066.c: 109:   reg_system1.raw = 0B11100011;
   884     06E0  30E3               	movlw	227
   885     06E1  00FD               	movwf	_reg_system1
   886     06E2                     l879:
   887                           
   888                           ;qn8066.c: 110:   reg_system2.raw = 0;
   889     06E2  01FC               	clrf	_reg_system2
   890     06E3                     l881:
   891                           
   892                           ;qn8066.c: 111:   reg_cca.raw = get_register(0x02);
   893     06E3  3002               	movlw	2
   894     06E4  120A  118A  26AC  120A  118A  	fcall	_get_register
   895     06E9  1283               	bcf	3,5	;RP0=0, select bank0
   896     06EA  1303               	bcf	3,6	;RP1=0, select bank0
   897     06EB  00BE               	movwf	_reg_cca
   898     06EC                     l883:
   899                           
   900                           ;qn8066.c: 112:   reg_cca.arg.xtal_inj = 1;
   901     06EC  17BE               	bsf	_reg_cca,7
   902     06ED                     l885:
   903                           
   904                           ;qn8066.c: 113:   reg_gplt.raw = get_register(0x27);
   905     06ED  3027               	movlw	39
   906     06EE  120A  118A  26AC  120A  118A  	fcall	_get_register
   907     06F3  00FB               	movwf	_reg_gplt
   908     06F4                     l887:
   909                           
   910                           ;qn8066.c: 114:   reg_fdev.raw = get_register(0x25);
   911     06F4  3025               	movlw	37
   912     06F5  120A  118A  26AC  120A  118A  	fcall	_get_register
   913     06FA  1283               	bcf	3,5	;RP0=0, select bank0
   914     06FB  1303               	bcf	3,6	;RP1=0, select bank0
   915     06FC  00BD               	movwf	_reg_fdev
   916     06FD                     l889:
   917                           
   918                           ;qn8066.c: 115:   reg_rds.raw = get_register(0x26);
   919     06FD  3026               	movlw	38
   920     06FE  120A  118A  26AC  120A  118A  	fcall	_get_register
   921     0703  1283               	bcf	3,5	;RP0=0, select bank0
   922     0704  1303               	bcf	3,6	;RP1=0, select bank0
   923     0705  00B6               	movwf	_reg_rds
   924     0706                     l891:
   925                           
   926                           ;qn8066.c: 116:   reg_reg_vga.raw = get_register(0x28);
   927     0706  3028               	movlw	40
   928     0707  120A  118A  26AC  120A  118A  	fcall	_get_register
   929     070C  1283               	bcf	3,5	;RP0=0, select bank0
   930     070D  1303               	bcf	3,6	;RP1=0, select bank0
   931     070E  00B7               	movwf	_reg_reg_vga
   932     070F                     l893:
   933                           
   934                           ;qn8066.c: 117:   reg_int_ctrl.raw = get_register(0x19);
   935     070F  3019               	movlw	25
   936     0710  120A  118A  26AC  120A  118A  	fcall	_get_register
   937     0715  1283               	bcf	3,5	;RP0=0, select bank0
   938     0716  1303               	bcf	3,6	;RP1=0, select bank0
   939     0717  00BC               	movwf	_reg_int_ctrl
   940     0718                     l895:
   941                           
   942                           ;qn8066.c: 118:   reg_pac.raw = get_register(0x24);
   943     0718  3024               	movlw	36
   944     0719  120A  118A  26AC  120A  118A  	fcall	_get_register
   945     071E  1283               	bcf	3,5	;RP0=0, select bank0
   946     071F  1303               	bcf	3,6	;RP1=0, select bank0
   947     0720  00B5               	movwf	_reg_pac
   948     0721                     l897:
   949                           
   950                           ;qn8066.c: 119:   reg_vol_ctl.raw = get_register(0x18);
   951     0721  3018               	movlw	24
   952     0722  120A  118A  26AC  120A  118A  	fcall	_get_register
   953     0727  1283               	bcf	3,5	;RP0=0, select bank0
   954     0728  1303               	bcf	3,6	;RP1=0, select bank0
   955     0729  00B4               	movwf	_reg_vol_ctl
   956     072A                     l106:
   957     072A  0008               	return
   958     072B                     __end_of_qn8066_begin:
   959                           
   960                           	psect	text4
   961     06AC                     __ptext4:	
   962 ;; *************** function _get_register *****************
   963 ;; Defined at:
   964 ;;		line 90 in file "qn8066.c"
   965 ;; Parameters:    Size  Location     Type
   966 ;;  registerNumb    1    wreg     unsigned char 
   967 ;; Auto vars:     Size  Location     Type
   968 ;;  registerNumb    1    4[COMMON] unsigned char 
   969 ;;  value           1    5[COMMON] unsigned char 
   970 ;; Return value:  Size  Location     Type
   971 ;;                  1    wreg      unsigned char 
   972 ;; Registers used:
   973 ;;		wreg, status,2, status,0, pclath, cstack
   974 ;; Tracked objects:
   975 ;;		On entry : 0/0
   976 ;;		On exit  : 0/0
   977 ;;		Unchanged: 0/0
   978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   979 ;;      Params:         0       0       0       0       0
   980 ;;      Locals:         2       0       0       0       0
   981 ;;      Temps:          2       0       0       0       0
   982 ;;      Totals:         4       0       0       0       0
   983 ;;Total ram usage:        4 bytes
   984 ;; Hardware stack levels used: 1
   985 ;; Hardware stack levels required when called: 1
   986 ;; This function calls:
   987 ;;		_i2c_read
   988 ;;		_i2c_start
   989 ;;		_i2c_stop
   990 ;;		_i2c_write
   991 ;; This function is called by:
   992 ;;		_qn8066_begin
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996     06AC                     _get_register:	
   997                           ;psect for function _get_register
   998                           
   999                           
  1000                           ;incstack = 0
  1001                           ; Regs used in _get_register: [wreg+status,2+status,0+pclath+cstack]
  1002                           ;get_register@registerNumber stored from wreg
  1003     06AC  00F4               	movwf	get_register@registerNumber
  1004     06AD                     l861:
  1005                           
  1006                           ;qn8066.c: 91:     unsigned char value;;qn8066.c: 92:     i2c_start();
  1007     06AD  120A  118A  2610  120A  118A  	fcall	_i2c_start
  1008     06B2                     l863:
  1009                           
  1010                           ;qn8066.c: 93:     i2c_write(0x21);
  1011     06B2  3021               	movlw	33
  1012     06B3  120A  118A  2620  120A  118A  	fcall	_i2c_write
  1013     06B8                     l865:
  1014                           
  1015                           ;qn8066.c: 94:     i2c_write(registerNumber);
  1016     06B8  0874               	movf	get_register@registerNumber,w
  1017     06B9  120A  118A  2620  120A  118A  	fcall	_i2c_write
  1018                           
  1019                           ;qn8066.c: 96:     i2c_start();
  1020     06BE  120A  118A  2610  120A  118A  	fcall	_i2c_start
  1021     06C3                     l867:
  1022                           
  1023                           ;qn8066.c: 97:     i2c_write(0x21 + 1);
  1024     06C3  3022               	movlw	34
  1025     06C4  120A  118A  2620  120A  118A  	fcall	_i2c_write
  1026     06C9                     l869:
  1027                           
  1028                           ;qn8066.c: 98:     value = i2c_read(1);
  1029     06C9  3001               	movlw	1
  1030     06CA  120A  118A  2667  120A  118A  	fcall	_i2c_read
  1031     06CF  00F5               	movwf	get_register@value
  1032                           
  1033                           ;qn8066.c: 100:     i2c_stop();
  1034     06D0  120A  118A  2618  120A  118A  	fcall	_i2c_stop
  1035     06D5                     l871:
  1036                           
  1037                           ;qn8066.c: 102:     _delay((unsigned long)((2)*(4000000/4000.0)));
  1038     06D5  3003               	movlw	3
  1039     06D6  00F3               	movwf	??_get_register+1
  1040     06D7  3097               	movlw	151
  1041     06D8  00F2               	movwf	??_get_register
  1042     06D9                     u237:
  1043     06D9  0BF2               	decfsz	??_get_register,f
  1044     06DA  2ED9               	goto	u237
  1045     06DB  0BF3               	decfsz	??_get_register+1,f
  1046     06DC  2ED9               	goto	u237
  1047     06DD  2EDE               	nop2
  1048     06DE                     l873:
  1049                           
  1050                           ;qn8066.c: 104:     return value;
  1051     06DE  0875               	movf	get_register@value,w
  1052     06DF                     l103:
  1053     06DF  0008               	return
  1054     06E0                     __end_of_get_register:
  1055                           
  1056                           	psect	text5
  1057     0620                     __ptext5:	
  1058 ;; *************** function _i2c_write *****************
  1059 ;; Defined at:
  1060 ;;		line 57 in file "qn8066.c"
  1061 ;; Parameters:    Size  Location     Type
  1062 ;;  data            1    wreg     unsigned char 
  1063 ;; Auto vars:     Size  Location     Type
  1064 ;;  data            1    0[COMMON] unsigned char 
  1065 ;; Return value:  Size  Location     Type
  1066 ;;                  1    wreg      void 
  1067 ;; Registers used:
  1068 ;;		wreg
  1069 ;; Tracked objects:
  1070 ;;		On entry : 0/0
  1071 ;;		On exit  : 0/0
  1072 ;;		Unchanged: 0/0
  1073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1074 ;;      Params:         0       0       0       0       0
  1075 ;;      Locals:         1       0       0       0       0
  1076 ;;      Temps:          0       0       0       0       0
  1077 ;;      Totals:         1       0       0       0       0
  1078 ;;Total ram usage:        1 bytes
  1079 ;; Hardware stack levels used: 1
  1080 ;; This function calls:
  1081 ;;		Nothing
  1082 ;; This function is called by:
  1083 ;;		_set_register
  1084 ;;		_get_register
  1085 ;; This function uses a non-reentrant model
  1086 ;;
  1087                           
  1088     0620                     _i2c_write:	
  1089                           ;psect for function _i2c_write
  1090                           
  1091                           
  1092                           ;incstack = 0
  1093                           ; Regs used in _i2c_write: [wreg]
  1094                           ;i2c_write@data stored from wreg
  1095     0620  00F0               	movwf	i2c_write@data
  1096     0621                     l835:
  1097                           
  1098                           ;qn8066.c: 58:     SSPBUF = data;
  1099     0621  0870               	movf	i2c_write@data,w
  1100     0622  1283               	bcf	3,5	;RP0=0, select bank0
  1101     0623  1303               	bcf	3,6	;RP1=0, select bank0
  1102     0624  0093               	movwf	19	;volatile
  1103     0625                     l82:	
  1104                           ;qn8066.c: 59:     while(SSPSTATbits.BF);
  1105                           
  1106     0625  1683               	bsf	3,5	;RP0=1, select bank1
  1107     0626  1303               	bcf	3,6	;RP1=0, select bank1
  1108     0627  1814               	btfsc	20,0	;volatile
  1109     0628  2E2A               	goto	u131
  1110     0629  2E2B               	goto	u130
  1111     062A                     u131:
  1112     062A  2E25               	goto	l82
  1113     062B                     u130:
  1114     062B                     l85:
  1115     062B  1B11               	btfsc	17,6	;volatile
  1116     062C  2E2E               	goto	u141
  1117     062D  2E2F               	goto	u140
  1118     062E                     u141:
  1119     062E  2E2B               	goto	l85
  1120     062F                     u140:
  1121     062F                     l88:
  1122     062F  0008               	return
  1123     0630                     __end_of_i2c_write:
  1124                           
  1125                           	psect	text6
  1126     0618                     __ptext6:	
  1127 ;; *************** function _i2c_stop *****************
  1128 ;; Defined at:
  1129 ;;		line 47 in file "qn8066.c"
  1130 ;; Parameters:    Size  Location     Type
  1131 ;;		None
  1132 ;; Auto vars:     Size  Location     Type
  1133 ;;		None
  1134 ;; Return value:  Size  Location     Type
  1135 ;;                  1    wreg      void 
  1136 ;; Registers used:
  1137 ;;		None
  1138 ;; Tracked objects:
  1139 ;;		On entry : 0/0
  1140 ;;		On exit  : 0/0
  1141 ;;		Unchanged: 0/0
  1142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1143 ;;      Params:         0       0       0       0       0
  1144 ;;      Locals:         0       0       0       0       0
  1145 ;;      Temps:          0       0       0       0       0
  1146 ;;      Totals:         0       0       0       0       0
  1147 ;;Total ram usage:        0 bytes
  1148 ;; Hardware stack levels used: 1
  1149 ;; This function calls:
  1150 ;;		Nothing
  1151 ;; This function is called by:
  1152 ;;		_set_register
  1153 ;;		_get_register
  1154 ;; This function uses a non-reentrant model
  1155 ;;
  1156                           
  1157     0618                     _i2c_stop:	
  1158                           ;psect for function _i2c_stop
  1159                           
  1160     0618                     l833:	
  1161                           ;incstack = 0
  1162                           ; Regs used in _i2c_stop: []
  1163                           
  1164                           
  1165                           ;qn8066.c: 48:     SSPCON2bits.PEN = 1;
  1166     0618  1683               	bsf	3,5	;RP0=1, select bank1
  1167     0619  1303               	bcf	3,6	;RP1=0, select bank1
  1168     061A  1511               	bsf	17,2	;volatile
  1169     061B                     l76:	
  1170                           ;qn8066.c: 49:     while(SSPCON2bits.PEN);
  1171                           
  1172     061B  1911               	btfsc	17,2	;volatile
  1173     061C  2E1E               	goto	u121
  1174     061D  2E1F               	goto	u120
  1175     061E                     u121:
  1176     061E  2E1B               	goto	l76
  1177     061F                     u120:
  1178     061F                     l79:
  1179     061F  0008               	return
  1180     0620                     __end_of_i2c_stop:
  1181                           
  1182                           	psect	text7
  1183     0610                     __ptext7:	
  1184 ;; *************** function _i2c_start *****************
  1185 ;; Defined at:
  1186 ;;		line 38 in file "qn8066.c"
  1187 ;; Parameters:    Size  Location     Type
  1188 ;;		None
  1189 ;; Auto vars:     Size  Location     Type
  1190 ;;		None
  1191 ;; Return value:  Size  Location     Type
  1192 ;;                  1    wreg      void 
  1193 ;; Registers used:
  1194 ;;		None
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1200 ;;      Params:         0       0       0       0       0
  1201 ;;      Locals:         0       0       0       0       0
  1202 ;;      Temps:          0       0       0       0       0
  1203 ;;      Totals:         0       0       0       0       0
  1204 ;;Total ram usage:        0 bytes
  1205 ;; Hardware stack levels used: 1
  1206 ;; This function calls:
  1207 ;;		Nothing
  1208 ;; This function is called by:
  1209 ;;		_set_register
  1210 ;;		_get_register
  1211 ;; This function uses a non-reentrant model
  1212 ;;
  1213                           
  1214     0610                     _i2c_start:	
  1215                           ;psect for function _i2c_start
  1216                           
  1217     0610                     l831:	
  1218                           ;incstack = 0
  1219                           ; Regs used in _i2c_start: []
  1220                           
  1221                           
  1222                           ;qn8066.c: 39:     SSPCON2bits.SEN = 1;
  1223     0610  1683               	bsf	3,5	;RP0=1, select bank1
  1224     0611  1303               	bcf	3,6	;RP1=0, select bank1
  1225     0612  1411               	bsf	17,0	;volatile
  1226     0613                     l70:	
  1227                           ;qn8066.c: 40:     while(SSPCON2bits.SEN);
  1228                           
  1229     0613  1811               	btfsc	17,0	;volatile
  1230     0614  2E16               	goto	u111
  1231     0615  2E17               	goto	u110
  1232     0616                     u111:
  1233     0616  2E13               	goto	l70
  1234     0617                     u110:
  1235     0617                     l73:
  1236     0617  0008               	return
  1237     0618                     __end_of_i2c_start:
  1238                           
  1239                           	psect	text8
  1240     0667                     __ptext8:	
  1241 ;; *************** function _i2c_read *****************
  1242 ;; Defined at:
  1243 ;;		line 68 in file "qn8066.c"
  1244 ;; Parameters:    Size  Location     Type
  1245 ;;  ack             1    wreg     unsigned char 
  1246 ;; Auto vars:     Size  Location     Type
  1247 ;;  ack             1    0[COMMON] unsigned char 
  1248 ;;  aux             1    1[COMMON] unsigned char 
  1249 ;; Return value:  Size  Location     Type
  1250 ;;                  1    wreg      unsigned char 
  1251 ;; Registers used:
  1252 ;;		wreg, status,2, status,0
  1253 ;; Tracked objects:
  1254 ;;		On entry : 0/0
  1255 ;;		On exit  : 0/0
  1256 ;;		Unchanged: 0/0
  1257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1258 ;;      Params:         0       0       0       0       0
  1259 ;;      Locals:         2       0       0       0       0
  1260 ;;      Temps:          0       0       0       0       0
  1261 ;;      Totals:         2       0       0       0       0
  1262 ;;Total ram usage:        2 bytes
  1263 ;; Hardware stack levels used: 1
  1264 ;; This function calls:
  1265 ;;		Nothing
  1266 ;; This function is called by:
  1267 ;;		_get_register
  1268 ;; This function uses a non-reentrant model
  1269 ;;
  1270                           
  1271     0667                     _i2c_read:	
  1272                           ;psect for function _i2c_read
  1273                           
  1274                           
  1275                           ;incstack = 0
  1276                           ; Regs used in _i2c_read: [wreg+status,2+status,0]
  1277                           ;i2c_read@ack stored from wreg
  1278     0667  00F0               	movwf	i2c_read@ack
  1279     0668                     l837:
  1280                           
  1281                           ;qn8066.c: 69:     unsigned char aux;;qn8066.c: 70:     SSPCON2bits.RCEN = 1;
  1282     0668  1683               	bsf	3,5	;RP0=1, select bank1
  1283     0669  1303               	bcf	3,6	;RP1=0, select bank1
  1284     066A  1591               	bsf	17,3	;volatile
  1285     066B                     l91:	
  1286                           ;qn8066.c: 71:     while(!SSPSTATbits.BF);
  1287                           
  1288     066B  1C14               	btfss	20,0	;volatile
  1289     066C  2E6E               	goto	u151
  1290     066D  2E6F               	goto	u150
  1291     066E                     u151:
  1292     066E  2E6B               	goto	l91
  1293     066F                     u150:
  1294     066F                     l839:
  1295                           
  1296                           ;qn8066.c: 72:     aux = SSPBUF;
  1297     066F  1283               	bcf	3,5	;RP0=0, select bank0
  1298     0670  1303               	bcf	3,6	;RP1=0, select bank0
  1299     0671  0813               	movf	19,w	;volatile
  1300     0672  00F1               	movwf	i2c_read@aux
  1301     0673                     l841:
  1302                           
  1303                           ;qn8066.c: 73:     SSPCON2bits.ACKDT = (ack)?0:1;
  1304     0673  0870               	movf	i2c_read@ack,w
  1305     0674  1903               	btfsc	3,2
  1306     0675  2E77               	goto	u161
  1307     0676  2E7B               	goto	u160
  1308     0677                     u161:
  1309     0677  1683               	bsf	3,5	;RP0=1, select bank1
  1310     0678  1303               	bcf	3,6	;RP1=0, select bank1
  1311     0679  1691               	bsf	17,5	;volatile
  1312     067A  2E7E               	goto	u174
  1313     067B                     u160:
  1314     067B  1683               	bsf	3,5	;RP0=1, select bank1
  1315     067C  1303               	bcf	3,6	;RP1=0, select bank1
  1316     067D  1291               	bcf	17,5	;volatile
  1317     067E                     u174:
  1318     067E                     l843:
  1319                           
  1320                           ;qn8066.c: 74:     SSPCON2bits.ACKEN = 1;
  1321     067E  1611               	bsf	17,4	;volatile
  1322     067F                     l94:	
  1323                           ;qn8066.c: 75:     while(SSPCON2bits.ACKEN);
  1324                           
  1325     067F  1A11               	btfsc	17,4	;volatile
  1326     0680  2E82               	goto	u181
  1327     0681  2E83               	goto	u180
  1328     0682                     u181:
  1329     0682  2E7F               	goto	l94
  1330     0683                     u180:
  1331     0683                     l845:
  1332                           
  1333                           ;qn8066.c: 76:     return aux;
  1334     0683  0871               	movf	i2c_read@aux,w
  1335     0684                     l97:
  1336     0684  0008               	return
  1337     0685                     __end_of_i2c_read:
  1338     007E                     btemp	set	126	;btemp
  1339     007E                     wtemp0	set	126
  1340                           
  1341                           	psect	config
  1342                           
  1343                           ;Config register CONFIG @ 0x2007
  1344                           ;	Oscillator Selection bits
  1345                           ;	FOSC = XT, XT oscillator
  1346                           ;	Watchdog Timer Enable bit
  1347                           ;	WDTE = OFF, WDT disabled
  1348                           ;	Power-up Timer Enable bit
  1349                           ;	PWRTE = OFF, PWRT disabled
  1350                           ;	Brown-out Reset Enable bit
  1351                           ;	BOREN = ON, BOR enabled
  1352                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1353                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1354                           ;	Data EEPROM Memory Code Protection bit
  1355                           ;	CPD = OFF, Data EEPROM code protection off
  1356                           ;	Flash Program Memory Write Enable bits
  1357                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1358                           ;	In-Circuit Debugger Mode bit
  1359                           ;	DEBUG = 0x1, unprogrammed default
  1360                           ;	Flash Program Memory Code Protection bit
  1361                           ;	CP = OFF, Code protection off
  1362     2007                     	org	8199
  1363     2007  3F79               	dw	16249

Data Sizes:
    Strings     0
    Constant    0
    Data        18
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80      0      31
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_qn8066_set_tx
    _qn8066_set_tx->_set_register
    _set_register->_i2c_write
    _qn8066_begin->_get_register
    _get_register->_i2c_read

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1537
                       _qn8066_begin
                      _qn8066_set_tx
 ---------------------------------------------------------------------------------
 (1) _qn8066_set_tx                                        6     4      2    1425
                                              5 COMMON     6     4      2
                       _set_register
 ---------------------------------------------------------------------------------
 (2) _set_register                                         4     3      1    1282
                                              1 COMMON     4     3      1
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (1) _qn8066_begin                                         0     0      0     112
                       _get_register
 ---------------------------------------------------------------------------------
 (2) _get_register                                         4     4      0     112
                                              2 COMMON     4     4      0
                           _i2c_read
                          _i2c_start
                           _i2c_stop
                          _i2c_write
 ---------------------------------------------------------------------------------
 (3) _i2c_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_read                                             2     2      0      45
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _qn8066_begin
     _get_register
       _i2c_read
       _i2c_start
       _i2c_stop
       _i2c_write
   _qn8066_set_tx
     _set_register
       _i2c_start
       _i2c_stop
       _i2c_write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      1F       5       38.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2D      12        0.0%
ABS                  0      0      2D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Aug 21 11:47:42 2024

             ?_get_register 0070                           pc 0002                 _SSPSTATbits 0094  
                        l70 0613                          l73 0617                          l82 0625  
                        l91 066B                          l76 061B                          l85 062B  
                        l94 067F                          l79 061F                          l88 062F  
                        l97 0684                          fsr 0004                         l100 06AB  
                       l103 06DF                         l106 072A                         l109 07DD  
                       l164 063E                         l165 063E                         l901 072D  
                       l831 0610                         l911 0758                         l903 0735  
                       l841 0673                         l833 0618                         l921 0784  
                       l913 0760                         l905 073D                         l843 067E  
                       l835 0621                         l851 068B                         l931 07B0  
                       l923 078C                         l915 0768                         l907 0746  
                       l845 0683                         l837 0668                         l861 06AD  
                       l853 0691                         l933 07B8                         l925 079B  
                       l917 0770                         l909 074E                         l839 066F  
                       l871 06D5                         l863 06B2                         l855 0697  
                       l935 07C2                         l927 07A0                         l919 077A  
                       l873 06DE                         l865 06B8                         l881 06E3  
                       l857 069D                         l849 0686                         l937 07CA  
                       l929 07A8                         l867 06C3                         l891 0706  
                       l883 06EC                         l859 06A2                         l939 0630  
                       l869 06C9                         l893 070F                         l885 06ED  
                       l877 06E0                         l895 0718                         l887 06F4  
                       l879 06E2                         l897 0721                         l889 06FD  
                       l899 072B                         u110 0617                         u111 0616  
                       u120 061F                         u121 061E                         u130 062B  
                       u131 062A                         u140 062F                         u204 0746  
                       u141 062E                         u150 066F                         u151 066E  
                       u160 067B                         u161 0677                         u217 07D8  
                       u227 06A6                         u180 0683                         u181 0682  
                       u237 06D9                         u174 067E                         u190 0745  
                       u191 0743                         indf 0000        qn8066_set_tx@auxFreq 0079  
                      _main 0630                        btemp 007E                        _txch 003B  
                      start 0000              ??_get_register 0072                _qn8066_begin 06E0  
                     ?_main 0070                 i2c_read@ack 0070                 i2c_read@aux 0071  
            _rdsStationName 0020                       _rdsPI 0029                       _rdsTP 0033  
                     pclath 000A                       status 0003                       wtemp0 007E  
           __initialization 07DE                __end_of_main 0642            __end_of_i2c_read 0685  
          __end_of_i2c_stop 0620                      ??_main 007B               _qn8066_set_tx 072B  
    qn8066_set_tx@frequency 0075                      _TRISC3 043B                      _TRISC4 043C  
                    _SSPCON 0014                      _SSPBUF 0013                      _rdsPTY 002F  
            ?_qn8066_set_tx 0075        __end_of_get_register 06E0     __end_of__initialization 07FC  
            __pcstackCOMMON 0070                __pidataBANK0 0642           __end_of_i2c_start 0618  
         __end_of_i2c_write 0630                  __pbssBANK0 0032                   ?_i2c_read 0070  
                 ?_i2c_stop 0070                  __pmaintext 0630             ??_qn8066_set_tx 0077  
                   _SSPCON2 0091                     _SSPSTAT 0094                  ??_i2c_read 0070  
                ??_i2c_stop 0070               ?_set_register 0071                     __ptext1 072B  
                   __ptext2 0685                     __ptext3 06E0                     __ptext4 06AC  
                   __ptext5 0620                     __ptext6 0618                     __ptext7 0610  
                   __ptext8 0667                     _reg_cca 003E                     _reg_pac 0035  
                   _reg_rds 0036        end_of_initialization 07FC  get_register@registerNumber 0074  
                _resetDelay 002D                _get_register 06AC              ??_set_register 0072  
             i2c_write@data 0070               _reg_xtal_div0 003A               _reg_xtal_div1 0039  
             _reg_xtal_div2 0038         start_initialization 07DE                   _i2c_start 0610  
                 _i2c_write 0620           get_register@value 0075           set_register@value 0071  
             ?_qn8066_begin 0070                  init_fetch0 0654                 __pdataBANK0 0020  
               __pbssCOMMON 007B                   ___latbits 0002                  ?_i2c_start 0070  
                ?_i2c_write 0070        __end_of_set_register 06AC              ??_qn8066_begin 0076  
     __end_of_qn8066_set_tx 07DE                _reg_int_ctrl 003C                _rdsSendError 0032  
               ??_i2c_start 0070                 ??_i2c_write 0070                    _i2c_read 0667  
                  _i2c_stop 0618        __end_of_qn8066_begin 072B  set_register@registerNumber 0074  
                  _reg_fdev 003D                    _reg_gplt 007B                 _reg_reg_vga 0037  
               _reg_vol_ctl 0034                _set_register 0685                 _reg_system1 007D  
               _reg_system2 007C                    _xtal_div 002B                 _rdsSyncTime 0031  
                  init_ram0 0658                 _SSPCON2bits 0091              _rdsRepeatGroup 0030  
